{"version":3,"sources":["../source/input.js"],"names":["Keys","Backspace","Delete","Phone_input","props","context","on_key_down","bind","on_cut","on_blur","format_input_value","value","format","rest","trim","findDOMNode","refs","input","caret_position","input_element","undefined","setSelectionRange","onChange","selectionStart","selectionEnd","start","end","event","options","selection","get_selection","with_trunk_prefix","get_input_value","get_caret_position","phone","caret","set_input_value","setTimeout","onBlur","backspace","keyCode","delete","preventDefault","Component","propTypes","oneOfType","shape","country","string","isRequired","template","func"],"mappings":"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","file":"input.js","sourcesContent":["// https://github.com/sanniassin/react-input-mask/blob/master/InputElement.js\n// https://github.com/halt-hammerzeit/react-phone-number-input\n\nimport React, { PropTypes } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { format_local, parse_plaintext_international } from './phone'\nimport edit from './editor'\n\n// Key codes\nconst Keys =\n{\n\tBackspace : 8,\n\tDelete    : 46\n}\n\n// Usage:\n//\n// <Phone\n// \tvalue={this.state.phone}\n// \tformat={format.RU}\n// \tonChange={phone => this.setState({ phone })}\n// \tclassName=\"phone-input\"\n// \tstyle={{ color: 'black' }} />\n//\nexport default class Phone_input extends React.Component\n{\n\tconstructor(props, context)\n\t{\n\t\tsuper(props, context)\n\n\t\tthis.on_key_down = this.on_key_down.bind(this)\n\t\tthis.on_cut = this.on_cut.bind(this)\n\t\tthis.on_blur = this.on_blur.bind(this)\n\t\tthis.format_input_value = this.format_input_value.bind(this)\n\t}\n\n\trender()\n\t{\n\t\tconst { value, format, ...rest } = this.props\n\n\t\t// Currently onCut has a bug: it just deletes, but doesn't copy.\n\t\t// Since no one would really cut a phone number, I guess that's ok.\n\n\t\t// Maybe React already trims the `value`.\n\t\t// If that's so then don't trim it here.\n\n\t\treturn (\n\t\t\t<input\n\t\t\t\t{...rest}\n\t\t\t\ttype=\"tel\"\n\t\t\t\tref=\"input\"\n\t\t\t\tvalue={format_local(value ? value.trim() : '', format, false)}\n\t\t\t\tonKeyDown={this.on_key_down}\n\t\t\t\tonChange={this.format_input_value}\n\t\t\t\tonBlur={this.on_blur}\n\t\t\t\tonPaste={this.format_input_value}\n\t\t\t\tonCut={this.on_cut}/>\n\t\t)\n\t}\n\n\t// Returns <input/> DOM Element\n\tinput_element()\n\t{\n\t\treturn ReactDOM.findDOMNode(this.refs.input)\n\t}\n\n\t// Sets <input/> value and caret position\n\tset_input_value(value, caret_position)\n\t{\n\t\t// DOM Node\n\t\tconst input = this.input_element()\n\n\t\t// set <input/> value manually to also set caret position\n\t\t// and prevent React from resetting the caret position later\n\t\t// inside subsequent `render()`.\n\t\tinput.value = value\n\n\t\t// Set caret position (with the neccessary adjustments)\n\t\tif (caret_position !== undefined)\n\t\t{\n\t\t\tinput.setSelectionRange(caret_position, caret_position)\n\t\t}\n\n\t\tconst { onChange, format } = this.props\n\n\t\tif (onChange)\n\t\t{\n\t\t\tonChange(parse_plaintext_international(value, format, false))\n\t\t}\n\t}\n\n\t// Gets <input/> value\n\tget_input_value()\n\t{\n\t\treturn this.input_element().value\n\t}\n\n\t// Gets <input/> caret position\n\tget_caret_position()\n\t{\n\t\treturn this.input_element().selectionStart\n\t}\n\n\t// Gets <input/> selected position\n\tget_selection()\n\t{\n\t\t// DOM Node\n\t\tconst input = this.input_element()\n\n\t\t// If no selection, return nothing\n\t\tif (input.selectionStart === input.selectionEnd)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\treturn { start: input.selectionStart, end: input.selectionEnd }\n\t}\n\n\t// Formats input value as a phone number\n\tformat_input_value(event, options = {})\n\t{\n\t\t// Get selection caret positions\n\t\toptions.selection = this.get_selection()\n\n\t\t// Trunk prefix is not part of the input\n\t\toptions.with_trunk_prefix = false\n\n\t\t// Edit <input/>ted value according to the input conditions (caret position, key pressed)\n\t\tconst { phone, caret } = edit(this.get_input_value(), this.get_caret_position(), this.props.format, options)\n\n\t\t// Set <input/> value and caret position\n\t\tthis.set_input_value(phone, caret)\n\t}\n\n\t// Intercepts \"Cut\" event.\n\t// Special handling for \"Cut\" event because\n\t// it wouldn't copy to clipboard otherwise.\n\ton_cut(event)\n\t{\n\t\tsetTimeout(() => this.format_input_value(event), 0)\n\t}\n\n\t// This handler is mainly for `redux-form`\n\ton_blur(event)\n\t{\n\t\tconst { onBlur, format } = this.props\n\n\t\tif (onBlur)\n\t\t{\n\t\t\tonBlur(parse_plaintext_international(this.input_element().value, format, false))\n\t\t}\n\t}\n\n\t// Intercepts \"Delete\" and \"Backspace\" keys\n\t// (hitting \"Delete\" or \"Backspace\"\n\t//  at any caret position should always result in \n\t//  erasing a digit)\n\ton_key_down(event)\n\t{\n\t\tconst backspace = event.keyCode === Keys.Backspace\n\t\tconst Delete    = event.keyCode === Keys.Delete\n\n\t\tif (backspace || Delete)\n\t\t{\n\t\t\tthis.format_input_value(event, { backspace, delete: Delete })\n\t\t\treturn event.preventDefault()\n\t\t}\n\t}\n}\n\nPhone_input.propTypes =\n{\n\tformat : PropTypes.oneOfType\n\t([\n\t\tPropTypes.shape\n\t\t({\n\t\t\tcountry  : PropTypes.string.isRequired,\n\t\t\ttemplate : PropTypes.string.isRequired\n\t\t}),\n\t\tPropTypes.shape\n\t\t({\n\t\t\tcountry  : PropTypes.string.isRequired,\n\t\t\ttemplate : PropTypes.func.isRequired\n\t\t})\n\t])\n\t.isRequired,\n\tvalue     : PropTypes.string,\n\tonChange  : PropTypes.func.isRequired,\n\tonBlur    : PropTypes.func\n}"]}